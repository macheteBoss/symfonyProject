security:
    # https://symfony.com/doc/current/security/authenticator_manager.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    #password_hashers:
    #    App\Entity\User: 'auto'
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        database_users:
            entity: { class: App\Entity\User, property: username }
    encoders:
        App\Entity\User:
            algorithm: bcrypt
            cost: 11
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: database_users
            pattern:   ^/
            login_throttling:
                max_attempts: 3
            remember_me:
                secret: 'notSoSecretArendaToken'
                lifetime: 604800 # 1 week in seconds
                path: /
            form_login:
                login_path: /login
                check_path: /login
                default_target_path: /lk
            logout:
                path: app_logout
                target: main
            entry_point: 'form_login'

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/lk, roles: [ROLE_USER, ROLE_ADMIN] }
        - { path: ^/admin, roles: ROLE_ADMIN }
